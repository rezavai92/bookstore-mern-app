[{"/home/reza/codes/ecommerce-site/client/src/index.js":"1","/home/reza/codes/ecommerce-site/client/src/reportWebVitals.js":"2","/home/reza/codes/ecommerce-site/client/src/components/App.js":"3","/home/reza/codes/ecommerce-site/client/src/contexts/context.js":"4","/home/reza/codes/ecommerce-site/client/src/components/admin/AdminLogin/login.js":"5","/home/reza/codes/ecommerce-site/client/src/components/admin/dashboard/dashboard.js":"6","/home/reza/codes/ecommerce-site/client/src/components/admin/dashboard/authorlist/authorlist.js":"7","/home/reza/codes/ecommerce-site/client/src/components/admin/AdminLogout/logout.js":"8","/home/reza/codes/ecommerce-site/client/src/components/admin/dashboard/booklist/booklist.js":"9","/home/reza/codes/ecommerce-site/client/src/components/admin/dashboard/Box/registerBox.js":"10","/home/reza/codes/ecommerce-site/client/src/components/admin/dashboard/authorlist/deleteModal.js":"11","/home/reza/codes/ecommerce-site/client/src/components/admin/dashboard/booklist/deletemodal.js":"12","/home/reza/codes/ecommerce-site/client/src/components/admin/dashboard/AddModal/addModal.js":"13","/home/reza/codes/ecommerce-site/client/src/components/client/home/home.js":"14","/home/reza/codes/ecommerce-site/client/src/components/client/products/books.js":"15","/home/reza/codes/ecommerce-site/client/src/components/client/products/book.js":"16","/home/reza/codes/ecommerce-site/client/src/components/client/cart/cart.js":"17","/home/reza/codes/ecommerce-site/client/src/components/client/loader/loader.js":"18"},{"size":511,"mtime":1609920350596,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1609917350720,"results":"21","hashOfConfig":"20"},{"size":796,"mtime":1610258667810,"results":"22","hashOfConfig":"20"},{"size":3254,"mtime":1610266674695,"results":"23","hashOfConfig":"20"},{"size":2926,"mtime":1610202585413,"results":"24","hashOfConfig":"20"},{"size":5787,"mtime":1610343881815,"results":"25","hashOfConfig":"20"},{"size":5498,"mtime":1610202633101,"results":"26","hashOfConfig":"20"},{"size":366,"mtime":1610202664415,"results":"27","hashOfConfig":"20"},{"size":7467,"mtime":1610202647614,"results":"28","hashOfConfig":"20"},{"size":1185,"mtime":1610186232313,"results":"29","hashOfConfig":"20"},{"size":1283,"mtime":1610202640984,"results":"30","hashOfConfig":"20"},{"size":1279,"mtime":1610202653756,"results":"31","hashOfConfig":"20"},{"size":15819,"mtime":1610202623394,"results":"32","hashOfConfig":"20"},{"size":1691,"mtime":1610299253520,"results":"33","hashOfConfig":"20"},{"size":888,"mtime":1610299055065,"results":"34","hashOfConfig":"20"},{"size":1526,"mtime":1610295674318,"results":"35","hashOfConfig":"20"},{"size":3376,"mtime":1610297885744,"results":"36","hashOfConfig":"20"},{"size":241,"mtime":1610299644538,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1u9a0de",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/reza/codes/ecommerce-site/client/src/index.js",[],["79","80"],"/home/reza/codes/ecommerce-site/client/src/reportWebVitals.js",[],"/home/reza/codes/ecommerce-site/client/src/components/App.js",["81","82"],"/home/reza/codes/ecommerce-site/client/src/contexts/context.js",["83","84","85","86","87"],"/home/reza/codes/ecommerce-site/client/src/components/admin/AdminLogin/login.js",[],"/home/reza/codes/ecommerce-site/client/src/components/admin/dashboard/dashboard.js",["88"],"/home/reza/codes/ecommerce-site/client/src/components/admin/dashboard/authorlist/authorlist.js",["89","90","91"],"import React ,{useState,useEffect,useContext} from 'react'\nimport {context} from '../../../../contexts/context'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt,faEdit } from '@fortawesome/free-solid-svg-icons'\nimport AddModal from '../AddModal/addModal'\nimport {Button} from 'react-bootstrap'\nimport axios from 'axios'\nimport './authorlist.css'\nimport DeleteModal from './deleteModal'\n\nconst AuthorList = ()=>{\n\nconst [willEditPopup,setWillEditPopup] = useState(false)\nconst[willDeletePopup,setWillDeletePopup] = useState(false)\nconst [authors,setAuthors] = useState([])\n//const[selectedAuthorName,setSele] = useState(\"\");\nconst [selectedAuthor,setSelectedAuthor] = useState(null)\nconst {adminLoginToken} = useContext(context)\nconst [edited,setEdited] = useState(false)\nconsole.log(\"list of authors\",authors)\nuseEffect(()=>{\n\n    async function fetchData (){\n        try{\n\n            const response = await axios.get('/api/author/all',{\n                headers:{\n                    axdxmxixn:adminLoginToken\n                }\n            } )\n\n            //let foundAuthors = response.data.authors;\n\n\n          const newAuthors=  response.data.authors.map((author)=>{\n\n            return{\n                name:author.name,\n                _id:author._id,\n                description:author.description,\n                genre:author.genre.name,\n                language:author.language.name,\n\n            }\n          })\n            setAuthors(newAuthors)\n        }\n        catch(error){\n            throw error\n        }\n\n    }\n\n    fetchData()\n\n},[edited])\n\n\nconst editPopupHandler =(_id,name,description,language,genre)=>{\n\n    setSelectedAuthor({_id,name,description,language,genre});\n   \n    setWillEditPopup(!willEditPopup)\n    async function fetchData (){\n        try{\n\n            const response = await axios.get('/api/author/all',{\n                headers:{\n                    axdxmxixn:adminLoginToken\n                }\n            } )\n            const newAuthors=  response.data.authors.map((author)=>{\n\n                return{\n                    name:author.name,\n                    _id:author._id,\n                    description:author.description,\n                    genre:author.genre.name,\n                    language:author.language.name,\n    \n                }\n              })\n                setAuthors(newAuthors)\n            \n        }\n        catch(error){\n            throw error\n        }\n\n    }\n\n    fetchData()\n\n    \n}\n\nconst deletePopupHandler = (_id)=>{\n\n    setSelectedAuthor({_id})\n    setWillDeletePopup(!willDeletePopup)\n\n    async function fetchData (){\n        try{\n\n            const response = await axios.get('/api/author/all',{\n                headers:{\n                    axdxmxixn:adminLoginToken\n                }\n            } )\n            const newAuthors=  response.data.authors.map((author)=>{\n\n                return{\n                    name:author.name,\n                    _id:author._id,\n                    description:author.description,\n                    genre:author.genre.name,\n                    language:author.language.name,\n    \n                }\n              })\n                setAuthors(newAuthors)\n            \n        }\n        catch(error){\n            throw error\n        }\n\n    }\n\n    fetchData()\n    \n}\n\nconst mappedAuthors = authors.map((author)=>{\n    return(\n    <tr key={author._id} >\n    <td >\n\n        {author.name}\n    </td>\n    <td>\n        {author.genre}\n    </td>\n    <td>\n        {author.language}\n    </td>\n    <td>\n        {author.description}\n    </td>\n    <td>\n                <Button variant=\"info\" style={{padding:\"1px\",margin:\"5px\"}} \n                    onClick={()=>{editPopupHandler(author._id,author.name,author.description,author.language,author.genre)}}\n                >\n                    <FontAwesomeIcon icon={faEdit} />\n                </Button>\n                <Button variant=\"danger\" style={{padding:\"1px\"}} \n                    onClick={ ()=>{deletePopupHandler(author._id) }}\n                >\n                    <FontAwesomeIcon icon={faTrashAlt} />\n                </Button>\n            </td>\n    </tr>\n     )\n})\n\nreturn(\n\n\n    <div style={{marginTop:\"5%\"}}>\n    <h2>List of Authors</h2>\n    <div className=\"author-list\" >\n    \n    {\n        willEditPopup?\n        <AddModal numberBox=\"0\" \n        header=\"Update Author\"\n        type=\"update\"\n        authorId={selectedAuthor._id}\n        files=\"0\"\n        textBoxTexts={[selectedAuthor.name,selectedAuthor.description]}\n        buttonText= \"Update Author\"\n         dropdown={[\"language\",\"genre\"]}\n         textBoxLabels={[\"name\",\"description\"]}\n         dropdownLabels={[\"Select Language\",\"Select Genre\"]}\n         numberBoxLabels={[]}\n        textBox=\"2\"\n         numberBox=\"0\"\n        text=\"Update Author\" \n        bg=\"#568c91\"\n addButtonHandler={editPopupHandler} />\n        :null\n    }\n\n    {\n        willDeletePopup? \n        <DeleteModal authorId={selectedAuthor._id} deletePopupHandler={deletePopupHandler} />\n        :null\n    }\n    <table className=\"author-table\"   >\n        <tr>\n            <th>\n                Name\n            </th>\n            <th>\n                Genre\n            </th>\n            <th>\n                Language\n            </th>\n            <th>\n                description\n            </th>\n            <th>\n                options\n            </th>\n\n        </tr>\n        {mappedAuthors}\n       \n    </table>\n</div>\n\n</div>)\n}\n\nexport default AuthorList","/home/reza/codes/ecommerce-site/client/src/components/admin/AdminLogout/logout.js",[],"/home/reza/codes/ecommerce-site/client/src/components/admin/dashboard/booklist/booklist.js",["92","93","94","95"],"import React ,{useState,useEffect,useContext} from 'react'\nimport {context} from '../../../../contexts/context'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt,faEdit } from '@fortawesome/free-solid-svg-icons'\nimport AddModal from '../AddModal/addModal'\nimport DeleteModal from './deletemodal'\nimport {Button} from 'react-bootstrap'\nimport axios from 'axios'\n\nconst BookList = ()=>{\n\nconst [willEditPopup,setWillEditPopup] = useState(false)\nconst[willDeletePopup,setWillDeletePopup] = useState(false)\nconst [books,setBooks] = useState([])\n//const[selectedAuthorName,setSele] = useState(\"\");\nconst [selectedBook,setSelectedBook] = useState(null)\nconst {adminLoginToken,arrayBufferToBase64} = useContext(context)\nconst [edited,setEdited] = useState(false)\nconsole.log(\"list of book\",books)\nuseEffect(()=>{\n\n    async function fetchData (){\n        try{\n\n            const response = await axios.get('/api/book/all',{\n                headers:{\n                    axdxmxixn:adminLoginToken\n                }\n            } )\n\n            //let foundAuthors = response.data.authors;\n\n\n          const newBooks=  response.data.books.map((book)=>{\n\n            return{\n                name:book.name,\n                _id:book._id,\n                description:book.description,\n                isbn:book.isbn,\n                availability:book.availability,\n                genre:book.genre.name,\n                photo: 'data:image/jpeg;base64,'+arrayBufferToBase64(book.photo.data.data),\n                language:book.language.name,\n                page:book.page,\n                price:book.price,\n                publisher:book.publisher.name,\n                author:book.author.name\n\n            }\n          })\n            setBooks(newBooks)\n        }\n        catch(error){\n            throw error\n        }\n\n    }\n\n    fetchData()\n\n},[edited])\n\n\nconst editPopupHandler =(_id,name,description,language,genre,\n    isbn,author,publisher,availability,page,price)=>{\n\n    setSelectedBook({_id,name,description,language,genre,isbn,author,publisher,availability,page,price});\n   \n    setWillEditPopup(!willEditPopup)\n    async function fetchData (){\n        try{\n\n            const response = await axios.get('/api/book/all',{\n                headers:{\n                    axdxmxixn:adminLoginToken\n                }\n            } )\n            const newBooks=  response.data.books.map((book)=>{\n\n                return{\n                    name:book.name,\n                    _id: book._id,\n                    description: book.description,\n                    genre:book.genre.name,\n                    language:book.language.name,\n                    photo: 'data:image/jpeg;base64,'+arrayBufferToBase64(book.photo.data.data),\n                    price:book.price,\n                    isbn:book.isbn,\n                    page:book.page,\n                    availability:book.availability,\n                    author:book.author.name,\n                    publisher:book.publisher.name\n    \n                }\n              })\n                setBooks(newBooks)\n            \n        }\n        catch(error){\n            throw error\n        }\n\n    }\n\n    fetchData()\n\n    \n}\n\nconst deletePopupHandler = (_id\n    )=>{\n\n    setSelectedBook({_id})\n    setWillDeletePopup(!willDeletePopup)\n\n    async function fetchData (){\n        try{\n\n            const response = await axios.get('/api/book/all',{\n                headers:{\n                    axdxmxixn:adminLoginToken\n                }\n            } )\n            const newBooks=  response.data.books.map((book)=>{\n\n                return{\n                    name:book.name,\n                    _id:book._id,\n                    description:book.description,\n                    genre:book.genre.name,\n                    language:book.language.name,\n                    isbn:book.isbn,\n                    publisher:book.publisher.name,\n                    photo: 'data:image/jpeg;base64,'+arrayBufferToBase64(book.photo.data.data),\n                    page:book.page,\n                    price:book.price,\n                    availability:book.availability,\n                    author:book.author.name,\n    \n                }\n              })\n                setBooks(newBooks)\n            \n        }\n        catch(error){\n            throw error\n        }\n\n    }\n\n    fetchData()\n    \n}\n\nconst mappedBooks = books.map((book)=>{\n    return(\n    <tr key={book._id} >\n    <td >\n\n        {book.name}\n    </td>\n    {\n        book.photo?<td>\n         <img src={book.photo} height=\"45px\" width=\"50px\" />\n         \n        </td>:null\n    }\n    <td>{book.author}</td>\n    <td>\n        {book.isbn}\n    </td>\n    <td>\n        {book.genre}\n    </td>\n    <td>\n        {book.language}\n    </td>\n    <td>\n        {book.description}\n    </td>\n    <td>\n        {book.page}\n    </td>\n    <td>\n        {book.price}\n    </td>\n    <td>\n        {book.publisher}\n    </td>\n    <td>\n        {book.availability}\n    </td>\n    <td>\n        <Button variant=\"info\" style={{padding:\"1px\",margin:\"5px\"}}  \n        onClick={()=>{editPopupHandler(book._id,book.name,book.description,book.language,book.genre,book.isbn,book.author,book.publisher,book.availability,book.page,book.price)  }}\n        ><FontAwesomeIcon icon={faEdit} /></Button>\n        <Button variant=\"danger\" style={{padding:\"1px\"}}  \n        \n        onClick={()=>{deletePopupHandler(\n            book._id)  }}\n        ><FontAwesomeIcon icon={faTrashAlt}  /></Button>\n    </td>\n\n    </tr>\n     )\n})\n\nreturn(\n\n\n    <div style={{marginTop:\"5%\"}}>\n    <h2>List of Books</h2>\n    <div className=\"author-list\" >\n    \n    {\n        willEditPopup?\n        <AddModal numberBox=\"0\" \n        header=\"Update Book\"\n        files=\"1\"\n        type=\"update\"\n        bookId={selectedBook._id}\n        textBoxTexts={[selectedBook.name,selectedBook.isbn,selectedBook.description,selectedBook.availability]}\n        numberBoxNumbers = {\n            [selectedBook.price,selectedBook.page]\n        }\n        buttonText= \"Update Book\"\n         dropdown={[\"author\",\"genre\",\"language\",\"publisher\"]}\n         textBoxLabels={[\"name\",\"isbn\",\"description\",\"availability\"]}\n         dropdownLabels={[\"Select Language\",\"Select Genre\",\"Select Author\",\"Select Publisher\"]}\n         numberBoxLabels={[\"price\",\"page\"]}\n        textBox=\"4\"\n         numberBox=\"2\"\n        text=\"Update Book\" \n        addButtonHandler={editPopupHandler}\n        bg=\"#568c91\"\n        />\n        :null\n    }\n\n    {\n        willDeletePopup? \n        <DeleteModal bookId={selectedBook._id} deletePopupHandler={deletePopupHandler} />\n        :null\n    }\n    <table className=\"author-table\"   >\n        <tr>\n            <th>\n                Name\n            </th>\n            <th>\n                Photo\n            </th>\n            <th>\n                Author\n            </th>\n            <th>\n                Isbn\n            </th>\n            <th>\n                Genre\n            </th>\n            <th>\n                Language\n            </th>\n            <th>\n                Description\n            </th>\n            <th>\n                Page\n            </th>\n            <th>\n                Price\n            </th>\n\n            <th>\n                Publisher\n            </th>\n            <th>\n                Availability\n            </th>\n            <th>\n                Options\n            </th>\n        </tr>\n        {mappedBooks}\n       \n    </table>\n</div>\n\n</div>)\n}\n\nexport default BookList","/home/reza/codes/ecommerce-site/client/src/components/admin/dashboard/Box/registerBox.js",["96","97"],"import React,{useState,useEffect} from 'react'\nimport {Card,Button} from 'react-bootstrap'\nimport './registerbox.css'\nimport AddModal from '../AddModal/addModal'\nconst RegisterBox =(props)=>{\n\n  const [willPopup,setWillPopup] = useState(false)\n\n  const addButtonHandler =()=>{\n\n    setWillPopup(!willPopup);\n  }\n\n  return(<div className=\"register-box\">\n\n      <Card style={{width:\"100%\",backgroundColor:props.bg,color:\"white\"}} >\n\n        <Card.Body>\n\n        \n        <div className=\"add-btn\" onClick={addButtonHandler}  >\n        {props.text}\n        </div>\n          \n        </Card.Body>\n      </Card>\n      {\n        willPopup?\n        <div>\n          <AddModal \n            type=\"add\"\n            numberBox={props.numberBox} \n            header={props.text}\n            textBox={props.textBox}\n            dropdown={props.dropdown}\n            files={props.files}\n            textBoxLabels ={props.textBoxLabels}\n            numberBoxLabels={props.numberBoxLabels}\n            dropdownLabels ={props.dropdownLabels}\n\n             buttonText={props.buttonText} addButtonHandler={addButtonHandler} />\n          </div>\n        :null\n      }\n\n  </div>)\n}\n\n\nexport default RegisterBox","/home/reza/codes/ecommerce-site/client/src/components/admin/dashboard/authorlist/deleteModal.js",[],"/home/reza/codes/ecommerce-site/client/src/components/admin/dashboard/booklist/deletemodal.js",[],"/home/reza/codes/ecommerce-site/client/src/components/admin/dashboard/AddModal/addModal.js",["98","99","100","101","102","103"],"import React,{useState,useEffect,useContext,useRef } from 'react'\nimport axios from 'axios'\nimport {context} from  '../../../../contexts/context'\nimport {Modal,Button,Form} from 'react-bootstrap'\nimport './addModal.css'\n\nconst AddModal =(props)=>{\n\n        const langRef = useRef()\n        const authRef = useRef()\n        const genreRef = useRef()\n\n        const [show, setShow] = useState(true);\n        const [bookPhoto,setBookPhoto] = useState(\"\");\n        const [files,setFiles] = useState([])\n        const [numberBox,setNumberBox] = useState([]);\n        const [textBox,setTextBox] = useState([]);\n        const [dropdown,setDropDown] = useState([]);\n        const [selectedGenre,setSelectedGenre] =  useState(null)\n        const[selectedAuthor,setSelectedAuthor] = useState(null)\n        const[selectedLanguage,setSelectedLanguage] = useState(null)\n        const [selectedPublisher,setSelectedPublisher] = useState(null)\n        const [langDropdown,setLangDropdown] = useState([])\n        const[genreDropdown,setGenreDropdown] = useState([])\n        const[authorDropdown,setAuthorDropdown] = useState([])\n        const[publisherDropdown,setPublisherDropdown] = useState([])\n        const {adminLoginToken} = useContext(context)\n        //console.log(dropdown)\n        console.log(\"genre ref is\",genreRef.current )\n        useEffect(()=>{\n\n            \n            \n            props.dropdown.forEach((d)=>{\n               // console.log(d)\n                if(d===\"language\"){\n                \n                   \n                    const existingLangDropdown = [...langDropdown];\n                  //  console.log(\"in language, existingdropdownob\",dropdownObjList)\n                    axios.get(\"/api/langs/all\",{headers:{axdxmxixn:adminLoginToken}}).then((res)=>{\n\n                        const options = res.data.languages.map((o)=>{return{value:o._id,text:o.name}});\n                        \n                        existingLangDropdown.push( options )\n                        setLangDropdown(existingLangDropdown)\n                        \n\n\n                        \n                    }).catch((error)=>{\n\n                    })\n\n                }\n\n                else if (d===\"author\"){\n\n                    \n                    const existingAuthDropdown = [...authorDropdown];\n                   // console.log(\"in author, existingdropdownob\",dropdownObjList)\n                    axios.get(\"/api/author/all\",{headers:{axdxmxixn:adminLoginToken}}).then((res)=>{\n\n                        const options = res.data.authors.map((o)=>{return{value:o._id,text:o.name}});\n                        \n                        existingAuthDropdown.push(options )\n                        setAuthorDropdown(existingAuthDropdown)\n                       // console.log(\"in auth\",existingDrodownObjList)\n\n                        \n                    }).catch((error)=>{\n\n                    })\n                }\n                 else if (d===\"publisher\"){\n\n                    \n                    const existingPublisherDropdown = [...publisherDropdown];\n                   // console.log(\"in author, existingdropdownob\",dropdownObjList)\n                    axios.get(\"/api/publishers/all\",{headers:{axdxmxixn:adminLoginToken}}).then((res)=>{\n\n                        const options = res.data.publishers.map((o)=>{\n                            \n                            return{value:o._id,text:o.name}});\n                        \n                        existingPublisherDropdown.push(options )\n                        setPublisherDropdown(existingPublisherDropdown)\n                       // console.log(\"in auth\",existingDrodownObjList)\n\n                        \n                    }).catch((error)=>{\n                        throw error;\n                    })\n                }\n\n                \n\n                else if (d===\"genre\"){\n\n                    const existingGenreDropdown = [...genreDropdown];\n                    //console.log(\"in genre, existingdropdownob\",dropdownObjList)\n                    axios.get(\"/api/genres/all\",{headers:{axdxmxixn:adminLoginToken}}).then((res)=>{\n\n                        const options = res.data.genres.map((o)=>{return{value:o._id,text:o.name}});\n                        \n                        existingGenreDropdown.push( options )\n                        setGenreDropdown([...existingGenreDropdown])\n\n                        \n                    }).catch((error)=>{\n\n                    })\n                }\n            })\n       \n            /// files {images}\n            let existingFiles =[...files];\n\n            for (let i =0;i<Number(props.files);i++){\n\n                existingFiles.push(\"\")\n            }\n\n            setFiles(existingFiles)\n\n            /// textboxes\n            let existingTextBox = [...textBox];\n\n            for(let i=0;i<Number(props.textBox);i++){\n                if(props.type===\"update\"){\n\n                    existingTextBox.push(props.textBoxTexts[i])\n                }\n                else{\n                    existingTextBox.push(\"\")\n                }\n                \n            }\n\n            setTextBox(existingTextBox);\n\n            // number boxes\n            let existingNumberBox = [...numberBox];\n\n            for(let i=0;i<Number(props.numberBox);i++){\n                \n                if(props.type===\"update\"){\n\n                    existingNumberBox.push(props.numberBoxNumbers[i])\n                }\n               else { \n                   existingNumberBox.push(\"\") \n                }\n            }\n           // setBookPhoto(files[0])\n            setNumberBox(existingNumberBox);\n        },[])\n\n        // handleclose()\n        \n        const handleClose = () => {\n            \n            props.addButtonHandler();    \n            setShow(false);\n        };\n\n        const addHandler =async (type)=>{\n\n            if(props.type===\"update\"){\n                 if (type===\"Update Author\"){\n\n                    \n    \n                        try{\n                            await axios.put(`/api/author/${props.authorId}`,\n                                {name:textBox[0],\n                                    genre:selectedGenre,\n                                    description:textBox[1],  \n                                   language:selectedLanguage },\n                                   \n                                   {headers:{\n                                   axdxmxixn:adminLoginToken\n                                   }}\n                            )\n                                }\n    \n                            \n                        \n    \n                        catch(error){\n                            throw error;\n    \n                        }\n    \n                    \n                    \n                      \n                    }\n\n\n                    else if (type===\"Update Book\"){\n\n\n                const data = new FormData();\n\n                data.append(\"name\",textBox[0] );\n                data.append(\"isbn\",textBox[1] );\n                data.append(\"description\",textBox[2] );\n                data.append(\"availability\",textBox[3] );\n                data.append(\"genre\",selectedGenre );\n                data.append(\"author\",selectedAuthor);\n                data.append(\"page\",numberBox[0] );\n                data.append(\"photo\",bookPhoto );\n                data.append(\"price\",numberBox[1] );\n                data.append(\"publisher\",selectedPublisher);\n                data.append(\"language\",selectedLanguage);\n\n                try{\n                await axios.put(`/api/book/${props.bookId}`,data,\n\n                   {headers:{\n                    axdxmxixn : adminLoginToken\n                }})\n\n            }\n            catch(error){\n\n                throw error;\n            }\n                    }\n      \n    \n                }\n    \n                \n    \n\n            \n            else {\n\n            if(type===\"Add Genre\"){\n\n                try{\n                    await  axios.post('/api/genres',{name:textBox[0]},{headers:{\n                        axdxmxixn:adminLoginToken\n                    }})\n                  }\n                  catch(error){\n                      throw error;\n                  }\n            }\n            else if (type===\"Add Language\"){\n\n                try{\n                  await  axios.post('/api/langs',{name:textBox[0]},{headers:{\n                      axdxmxixn:adminLoginToken\n                  }})\n                }\n                catch(error){\n                    throw error;\n                }\n\n            }\n\n            else if (type===\"Add Author\"){\n\n               \n\n                \n                try{\n                    await  axios.post('/api/author',\n                    \n                    {name:textBox[0],\n                     genre:selectedGenre,\n                     description:textBox[1],  \n                    language:selectedLanguage }\n                    \n                    ,{headers:{\n                    axdxmxixn:adminLoginToken\n                    }}\n                    \n                    )\n                  }\n                  catch(error){\n                      throw error;\n                  }\n                \n  \n\n            }\n\n            \n\n            \n\n            else if (type===\"Add Book\"){\n\n\n                const data = new FormData();\n\n                data.append(\"name\",textBox[0] );\n                data.append(\"isbn\",textBox[1] );\n                data.append(\"description\",textBox[2] );\n                data.append(\"availability\",textBox[3] );\n                data.append(\"genre\",selectedGenre );\n                data.append(\"author\",selectedAuthor);\n                data.append(\"page\",numberBox[0] );\n                data.append(\"photo\",files[0] );\n                data.append(\"price\",numberBox[1] );\n                data.append(\"publisher\",selectedPublisher);\n                data.append(\"language\",selectedLanguage);\n\n\n                try{\n                 await axios.post(\"/api/book\",data,\n\n                    {headers:{\n                     axdxmxixn : adminLoginToken\n                 }})\n\n                \n                }\n\n                catch(error){\n                    throw error\n\n                }\n\n            }\n\n\n            else if (type===\"Add Publisher\"){\n                try{\n                    await  axios.post('/api/publishers',{name:textBox[0]},{headers:{\n                        axdxmxixn:adminLoginToken\n                    }})\n                  }\n                  catch(error){\n                      throw error;\n                  }\n  \n\n\n            }\n\n            }\n        }\n\n\n        const mappedTextBox = textBox.map((t,index)=>{\n            return(<>\n                <Form.Label>{props.textBoxLabels[index]}</Form.Label>\n                 <Form.Control type=\"text\" \n                 value={t}\n                 onChange={(e)=>{\n                     \n                    let tBox = [...textBox];\n                    tBox[index] = e.target.value;\n                    setTextBox(tBox);\n                \n                }} placeholder={ props.textBoxLabels[index] } />\n                </>\n        )\n        })\n\n        const mappedFiles = files.map((file,index)=>{\n\n            return(<>\n            <input type=\"file\" id={`photo${index}`}  name={`photo${index}`}  \n                onChange={(e)=>{\n\n                let fileBoxes = [...files];\n                fileBoxes[index] = e.target.files[0];\n                setFiles(fileBoxes);\n                \n                \n            }}  />\n            </>)\n        })\n        const mappedNumberBox = numberBox.map((n,index)=>{\n            return (\n                 <>\n                 <Form.Label>{props.numberBoxLabels[index]}</Form.Label>\n                 <Form.Control type=\"number\" \n                 value={n}\n                 onChange={(e)=>{\n                     \n                    let noBox = [...numberBox];\n                    noBox[index] = e.target.value;\n                    setNumberBox(noBox);\n                \n                }}  />\n                </>\n        )\n        })\n\n        const mappedAuthorDropdown = authorDropdown.map((d,index)=>{\n          //  console.log(d)\n            return(<>\n            <Form.Label>{props.dropdownLabels[2]} :</Form.Label>\n            <select style={{width:\"100%\"}} onChange={(e)=>{setSelectedAuthor(e.target.value)}} >\n            <option>Select Author</option>\n                {d.map((o)=>{\n                    console.log(o)\n                    return(<option value={o.value} >{o.text}</option>)\n                })}\n            </select>\n            </>)\n        })\n\n        const mappedGenreDropdown = genreDropdown.map((d,index)=>{\n            //  console.log(d)\n              return(<>\n                <Form.Label>{props.dropdownLabels[1]} : </Form.Label>\n              <select style={{width:\"100%\" }} onChange={(e)=>{setSelectedGenre(e.target.value)}}  >\n              <option>Select Genre</option>\n                  {d.map((o)=>{\n                      \n                      return(<option value={o.value} >{o.text}</option>)\n                  })}\n              </select>\n              </>)\n          })\n\n          const mappedPublisherDropdown = publisherDropdown.map((d,index)=>{\n            //  console.log(d)\n              return(<>\n                <Form.Label>{props.dropdownLabels[3]} : </Form.Label>\n              <select style={{width:\"100%\" }} \n              onChange={(e)=>{setSelectedPublisher(e.target.value)}}  >\n              <option>Select Publisher</option>\n                  {d.map((o)=>{\n                      \n                      return(<option value={o.value} >{o.text}</option>)\n                  })}\n              </select>\n              </>)\n          })\n\n         // console.log(\"selected publisher is\",selectedPublisher)\n\n          const mappedLanguageDropdown = langDropdown.map((d,index)=>{\n            //  console.log(d)\n              return(<>\n                <Form.Label>{props.dropdownLabels[0]} : </Form.Label>\n              <select style={{width:\"100%\"}}  onChange={(e)=>{setSelectedLanguage(e.target.value)}}  >\n\n                <option>Select Language</option>\n                  {d.map((o)=>{\n                      \n                      return(<option  value={o.value} >{o.text}</option>)\n                  })}\n              </select>\n              </>)\n          })\n       \n      \n        return (\n          <>\n            \n            <Modal show={show} onHide={handleClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>{props.header}</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n\n\n              {textBox.length>0?\n            \n            <div className=\"textbox-flex\" >\n                {mappedTextBox}\n            </div>\n            \n            :null}\n\n            {files.length>0? \n            <div>\n                {mappedFiles}\n            </div>\n            :null}\n\n\n                {props.dropdown.length>0?\n                <div>\n                    \n                    {mappedAuthorDropdown}\n                    {mappedGenreDropdown}\n                    {mappedLanguageDropdown}\n                    {mappedPublisherDropdown}\n                </div>\n                :null}\n            {numberBox.length>0?\n            \n            <div className=\"numberbox-flex\" >\n                {mappedNumberBox}\n            </div>\n            \n            :null}\n\n            \n\n\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                  Close\n                </Button>\n                <Button variant=\"primary\" onClick={(e)=>{ addHandler(props.header)  ;handleClose()} }>\n                  {props.buttonText}\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </>\n        );\n      }\n      \n\n\n\nexport default AddModal","/home/reza/codes/ecommerce-site/client/src/components/client/home/home.js",["104","105","106","107"],"/home/reza/codes/ecommerce-site/client/src/components/client/products/books.js",["108"],"/home/reza/codes/ecommerce-site/client/src/components/client/products/book.js",["109","110","111","112","113"],"/home/reza/codes/ecommerce-site/client/src/components/client/cart/cart.js",["114","115","116","117","118","119","120"],"/home/reza/codes/ecommerce-site/client/src/components/client/loader/loader.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":10,"column":3,"nodeType":"127","messageId":"128","endLine":10,"endColumn":9},{"ruleId":"125","severity":1,"message":"129","line":12,"column":3,"nodeType":"127","messageId":"128","endLine":12,"endColumn":7},{"ruleId":"125","severity":1,"message":"130","line":14,"column":8,"nodeType":"127","messageId":"128","endLine":14,"endColumn":13},{"ruleId":"125","severity":1,"message":"131","line":15,"column":22,"nodeType":"127","messageId":"128","endLine":15,"endColumn":39},{"ruleId":"125","severity":1,"message":"132","line":17,"column":18,"nodeType":"127","messageId":"128","endLine":17,"endColumn":31},{"ruleId":"125","severity":1,"message":"133","line":27,"column":7,"nodeType":"127","messageId":"128","endLine":27,"endColumn":19},{"ruleId":"134","severity":1,"message":"135","line":72,"column":20,"nodeType":"136","messageId":"137","endLine":72,"endColumn":22},{"ruleId":"125","severity":1,"message":"138","line":12,"column":28,"nodeType":"127","messageId":"128","endLine":12,"endColumn":46},{"ruleId":"125","severity":1,"message":"139","line":19,"column":15,"nodeType":"127","messageId":"128","endLine":19,"endColumn":24},{"ruleId":"140","severity":1,"message":"141","line":56,"column":3,"nodeType":"142","endLine":56,"endColumn":11,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":187,"column":10,"nodeType":"146","endLine":187,"endColumn":23},{"ruleId":"125","severity":1,"message":"139","line":18,"column":15,"nodeType":"127","messageId":"128","endLine":18,"endColumn":24},{"ruleId":"140","severity":1,"message":"147","line":62,"column":3,"nodeType":"142","endLine":62,"endColumn":11,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":165,"column":10,"nodeType":"151","endLine":165,"endColumn":61},{"ruleId":"144","severity":1,"message":"145","line":233,"column":10,"nodeType":"146","endLine":233,"endColumn":23},{"ruleId":"125","severity":1,"message":"152","line":1,"column":24,"nodeType":"127","messageId":"128","endLine":1,"endColumn":33},{"ruleId":"125","severity":1,"message":"153","line":2,"column":14,"nodeType":"127","messageId":"128","endLine":2,"endColumn":20},{"ruleId":"125","severity":1,"message":"154","line":9,"column":15,"nodeType":"127","messageId":"128","endLine":9,"endColumn":22},{"ruleId":"125","severity":1,"message":"155","line":10,"column":15,"nodeType":"127","messageId":"128","endLine":10,"endColumn":22},{"ruleId":"125","severity":1,"message":"156","line":14,"column":26,"nodeType":"127","messageId":"128","endLine":14,"endColumn":38},{"ruleId":"125","severity":1,"message":"157","line":18,"column":16,"nodeType":"127","messageId":"128","endLine":18,"endColumn":24},{"ruleId":"125","severity":1,"message":"158","line":18,"column":25,"nodeType":"127","messageId":"128","endLine":18,"endColumn":36},{"ruleId":"140","severity":1,"message":"159","line":157,"column":11,"nodeType":"142","endLine":157,"endColumn":13,"suggestions":"160"},{"ruleId":"125","severity":1,"message":"161","line":1,"column":15,"nodeType":"127","messageId":"128","endLine":1,"endColumn":23},{"ruleId":"125","severity":1,"message":"152","line":1,"column":24,"nodeType":"127","messageId":"128","endLine":1,"endColumn":33},{"ruleId":"125","severity":1,"message":"162","line":9,"column":10,"nodeType":"127","messageId":"128","endLine":9,"endColumn":19},{"ruleId":"125","severity":1,"message":"163","line":12,"column":21,"nodeType":"127","messageId":"128","endLine":12,"endColumn":35},{"ruleId":"125","severity":1,"message":"164","line":1,"column":34,"nodeType":"127","messageId":"128","endLine":1,"endColumn":44},{"ruleId":"125","severity":1,"message":"165","line":6,"column":8,"nodeType":"127","messageId":"128","endLine":6,"endColumn":13},{"ruleId":"140","severity":1,"message":"166","line":19,"column":7,"nodeType":"142","endLine":19,"endColumn":9,"suggestions":"167"},{"ruleId":"125","severity":1,"message":"168","line":20,"column":32,"nodeType":"127","messageId":"128","endLine":20,"endColumn":36},{"ruleId":"125","severity":1,"message":"163","line":20,"column":47,"nodeType":"127","messageId":"128","endLine":20,"endColumn":61},{"ruleId":"149","severity":1,"message":"150","line":44,"column":5,"nodeType":"151","endLine":44,"endColumn":51},{"ruleId":"125","severity":1,"message":"169","line":5,"column":10,"nodeType":"127","messageId":"128","endLine":5,"endColumn":13},{"ruleId":"125","severity":1,"message":"170","line":8,"column":18,"nodeType":"127","messageId":"128","endLine":8,"endColumn":32},{"ruleId":"125","severity":1,"message":"171","line":8,"column":33,"nodeType":"127","messageId":"128","endLine":8,"endColumn":47},{"ruleId":"125","severity":1,"message":"172","line":8,"column":48,"nodeType":"127","messageId":"128","endLine":8,"endColumn":57},{"ruleId":"125","severity":1,"message":"163","line":8,"column":58,"nodeType":"127","messageId":"128","endLine":8,"endColumn":72},{"ruleId":"140","severity":1,"message":"173","line":34,"column":3,"nodeType":"142","endLine":34,"endColumn":5,"suggestions":"174"},{"ruleId":"149","severity":1,"message":"150","line":42,"column":9,"nodeType":"151","endLine":44,"endColumn":11},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'token' is assigned a value but never used.","'setLoggedInUserId' is assigned a value but never used.","'setLoginToken' is assigned a value but never used.","'registerUser' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'confirmAdminLogout' is assigned a value but never used.","'setEdited' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'adminLoginToken'. Either include it or remove the dependency array.","ArrayExpression",["177"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'adminLoginToken' and 'arrayBufferToBase64'. Either include them or remove the dependency array.",["178"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'Button' is defined but never used.","'langRef' is assigned a value but never used.","'authRef' is assigned a value but never used.","'setBookPhoto' is assigned a value but never used.","'dropdown' is assigned a value but never used.","'setDropDown' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'adminLoginToken', 'authorDropdown', 'files', 'genreDropdown', 'langDropdown', 'numberBox', 'props.dropdown', 'props.files', 'props.numberBox', 'props.numberBoxNumbers', 'props.textBox', 'props.textBoxTexts', 'props.type', 'publisherDropdown', and 'textBox'. Either include them or remove the dependency array.",["179"],"'useState' is defined but never used.","'propTypes' is defined but never used.","'removeFromCart' is assigned a value but never used.","'useContext' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'arrayBufferToBase64' and 'props.book.photo.data.data'. Either include them or remove the dependency array. If 'setBookSrc' needs the current value of 'props.book.photo.data.data', you can also switch to useReducer instead of useState and read 'props.book.photo.data.data' in the reducer.",["180"],"'cart' is assigned a value but never used.","'set' is defined but never used.","'incrementTotal' is assigned a value but never used.","'decrementTotal' is assigned a value but never used.","'addToCart' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cart.items', 'total', and 'unitPerItem'. Either include them or remove the dependency array.",["181"],"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [adminLoginToken, edited]",{"range":"192","text":"193"},"Update the dependencies array to be: [adminLoginToken, arrayBufferToBase64, edited]",{"range":"194","text":"195"},"Update the dependencies array to be: [adminLoginToken, authorDropdown, files, genreDropdown, langDropdown, numberBox, props.dropdown, props.files, props.numberBox, props.numberBoxNumbers, props.textBox, props.textBoxTexts, props.type, publisherDropdown, textBox]",{"range":"196","text":"197"},"Update the dependencies array to be: [arrayBufferToBase64, props.book.photo.data.data]",{"range":"198","text":"199"},"Update the dependencies array to be: [cart.items, total, unitPerItem]",{"range":"200","text":"201"},[1586,1594],"[adminLoginToken, edited]",[1868,1876],"[adminLoginToken, arrayBufferToBase64, edited]",[5601,5603],"[adminLoginToken, authorDropdown, files, genreDropdown, langDropdown, numberBox, props.dropdown, props.files, props.numberBox, props.numberBoxNumbers, props.textBox, props.textBoxTexts, props.type, publisherDropdown, textBox]",[541,543],"[arrayBufferToBase64, props.book.photo.data.data]",[995,997],"[cart.items, total, unitPerItem]"]