[{"/home/reza/codes/ecommerce-site/client/src/index.js":"1","/home/reza/codes/ecommerce-site/client/src/reportWebVitals.js":"2","/home/reza/codes/ecommerce-site/client/src/components/App.js":"3","/home/reza/codes/ecommerce-site/client/src/components/dashboard/Box/registerBox.js":"4","/home/reza/codes/ecommerce-site/client/src/components/dashboard/dashboard.js":"5","/home/reza/codes/ecommerce-site/client/src/components/dashboard/AddModal/addModal.js":"6","/home/reza/codes/ecommerce-site/client/src/contexts/context.js":"7","/home/reza/codes/ecommerce-site/client/src/components/AdminLogin/login.js":"8","/home/reza/codes/ecommerce-site/client/src/components/dashboard/authorlist/authorlist.js":"9","/home/reza/codes/ecommerce-site/client/src/components/dashboard/authorlist/deleteModal.js":"10","/home/reza/codes/ecommerce-site/client/src/components/AdminLogout/logout.js":"11"},{"size":511,"mtime":1609920350596,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1609917350720,"results":"14","hashOfConfig":"13"},{"size":581,"mtime":1609933722735,"results":"15","hashOfConfig":"13"},{"size":1114,"mtime":1609985114935,"results":"16","hashOfConfig":"13"},{"size":5324,"mtime":1610084639115,"results":"17","hashOfConfig":"13"},{"size":9612,"mtime":1610081042605,"results":"18","hashOfConfig":"13"},{"size":2150,"mtime":1610081584544,"results":"19","hashOfConfig":"13"},{"size":2923,"mtime":1610082417764,"results":"20","hashOfConfig":"13"},{"size":3697,"mtime":1610081083676,"results":"21","hashOfConfig":"13"},{"size":1270,"mtime":1610030351469,"results":"22","hashOfConfig":"13"},{"size":363,"mtime":1610081320623,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1u9a0de",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/reza/codes/ecommerce-site/client/src/index.js",[],["51","52"],"/home/reza/codes/ecommerce-site/client/src/reportWebVitals.js",[],"/home/reza/codes/ecommerce-site/client/src/components/App.js",["53","54"],"import React from 'react'\nimport Dashboard from './dashboard/dashboard'\nimport AdminLogin from './AdminLogin/login'\nimport ContextProvider from '../contexts/context'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nconst App =()=>{\n\n  return(<div className=\"container\" >\n\n      <ContextProvider>\n        <Router>\n          <Route  path=\"/axdxmxixn/login\" exact component ={AdminLogin}  />\n          <Route path=\"/axdxmxixn/dashboard\" exact component={Dashboard} />\n        </Router>\n      </ContextProvider>\n\n  </div>)\n}\n\n\nexport default App","/home/reza/codes/ecommerce-site/client/src/components/dashboard/Box/registerBox.js",["55","56"],"import React,{useState,useEffect} from 'react'\nimport {Card,Button} from 'react-bootstrap'\nimport './registerbox.css'\nimport AddModal from '../AddModal/addModal'\nconst RegisterBox =(props)=>{\n\n  const [willPopup,setWillPopup] = useState(false)\n\n  const addButtonHandler =()=>{\n\n    setWillPopup(!willPopup);\n  }\n\n  return(<div className=\"register-box\">\n\n      <Card style={{width:\"100%\",backgroundColor:props.bg,color:\"white\"}} >\n\n        <Card.Body>\n\n        \n        <div className=\"add-btn\" onClick={addButtonHandler}  >\n        {props.text}\n        </div>\n          \n        </Card.Body>\n      </Card>\n      {\n        willPopup?\n        <div>\n          <AddModal numberBox={props.numberBox} \n            header={props.text}\n            textBox={props.textBox}\n            dropdown={props.dropdown}\n            textBoxLabels ={props.textBoxLabels}\n            numberBoxLabels={props.numberBoxLabels}\n            dropdownLabels ={props.dropdownLabels}\n\n          buttonText={props.buttonText} addButtonHandler={addButtonHandler} />\n          </div>\n        :null\n      }\n\n  </div>)\n}\n\n\nexport default RegisterBox","/home/reza/codes/ecommerce-site/client/src/components/dashboard/dashboard.js",["57"],"/home/reza/codes/ecommerce-site/client/src/components/dashboard/AddModal/addModal.js",["58","59","60","61","62","63"],"import React,{useState,useEffect,useContext,useRef } from 'react'\nimport axios from 'axios'\nimport {context} from  '../../../contexts/context'\nimport {Modal,Button,Form} from 'react-bootstrap'\nimport './addModal.css'\n\nconst AddModal =(props)=>{\n\n        const langRef = useRef()\n        const authRef = useRef()\n        const genreRef = useRef()\n\n        const [show, setShow] = useState(true);\n        const [numberBox,setNumberBox] = useState([]);\n        const [textBox,setTextBox] = useState([]);\n        const [dropdown,setDropDown] = useState([]);\n        const [selectedGenre,setSelectedGenre] =  useState(null)\n        const[selectedAuthor,setSelectedAuthor] = useState(null)\n        const[selectedLanguage,setSelectedLanguage] = useState(null)\n        const [langDropdown,setLangDropdown] = useState([])\n        const[genreDropdown,setGenreDropdown] = useState([])\n        const[authorDropdown,setAuthorDropdown] = useState([])\n        const {adminLoginToken} = useContext(context)\n        //console.log(dropdown)\n        console.log(\"genre ref is\",genreRef.current )\n        useEffect(()=>{\n\n            \n            \n            props.dropdown.forEach((d)=>{\n               // console.log(d)\n                if(d===\"language\"){\n                \n                   \n                    const existingLangDropdown = [...langDropdown];\n                  //  console.log(\"in language, existingdropdownob\",dropdownObjList)\n                    axios.get(\"/api/langs/all\",{headers:{axdxmxixn:adminLoginToken}}).then((res)=>{\n\n                        const options = res.data.languages.map((o)=>{return{value:o._id,text:o.name}});\n                        \n                        existingLangDropdown.push( options )\n                        setLangDropdown(existingLangDropdown)\n                        \n\n\n                        \n                    }).catch((error)=>{\n\n                    })\n\n                }\n\n                else if (d===\"author\"){\n\n                    \n                    const existingAuthDropdown = [...authorDropdown];\n                   // console.log(\"in author, existingdropdownob\",dropdownObjList)\n                    axios.get(\"/api/author/all\",{headers:{axdxmxixn:adminLoginToken}}).then((res)=>{\n\n                        const options = res.data.authors.map((o)=>{return{value:o._id,text:o.name}});\n                        \n                        existingAuthDropdown.push(options )\n                        setAuthorDropdown(existingAuthDropdown)\n                       // console.log(\"in auth\",existingDrodownObjList)\n\n                        \n                    }).catch((error)=>{\n\n                    })\n                }\n\n\n                else if (d===\"genre\"){\n\n                    const existingGenreDropdown = [...genreDropdown];\n                    //console.log(\"in genre, existingdropdownob\",dropdownObjList)\n                    axios.get(\"/api/genres/all\",{headers:{axdxmxixn:adminLoginToken}}).then((res)=>{\n\n                        const options = res.data.genres.map((o)=>{return{value:o._id,text:o.name}});\n                        \n                        existingGenreDropdown.push( options )\n                        setGenreDropdown([...existingGenreDropdown])\n\n                        \n                    }).catch((error)=>{\n\n                    })\n                }\n            })\n       \n\n            let existingTextBox = [...textBox];\n\n            for(let i=0;i<Number(props.textBox);i++){\n                existingTextBox.push(\"\")\n            }\n\n            setTextBox(existingTextBox);\n\n            let existingNumberBox = [...numberBox];\n\n            for(let i=0;i<Number(props.numberBox);i++){\n                existingNumberBox.push(\"\")\n            }\n\n            setNumberBox(existingNumberBox);\n        },[])\n\n        \n        const handleClose = () => {\n            \n            props.addButtonHandler();    \n            setShow(false);\n        };\n\n        const addHandler =async (type)=>{\n\n\n            if(type===\"Add Genre\"){\n\n                try{\n                    await  axios.post('/api/genres',{name:textBox[0]},{headers:{\n                        axdxmxixn:adminLoginToken\n                    }})\n                  }\n                  catch(error){\n                      throw error;\n                  }\n            }\n            else if (type===\"Add Language\"){\n\n                try{\n                  await  axios.post('/api/langs',{name:textBox[0]},{headers:{\n                      axdxmxixn:adminLoginToken\n                  }})\n                }\n                catch(error){\n                    throw error;\n                }\n\n            }\n            else if (type===\"Add Author\"){\n                try{\n                    await  axios.post('/api/author',\n                    \n                    {name:textBox[0],\n                     genre:selectedGenre,\n                     description:textBox[1],  \n                    language:selectedLanguage },{headers:{\n                    axdxmxixn:adminLoginToken\n                    }})\n                  }\n                  catch(error){\n                      throw error;\n                  }\n  \n\n            }\n            else if (type===\"Add Book\"){\n\n            }\n            else if (type===\"Add Publisher\"){\n                try{\n                    await  axios.post('/api/publishers',{name:textBox[0]},{headers:{\n                        axdxmxixn:adminLoginToken\n                    }})\n                  }\n                  catch(error){\n                      throw error;\n                  }\n  \n\n\n            }\n        }\n\n\n        const mappedTextBox = textBox.map((t,index)=>{\n            return(<>\n                <Form.Label>{props.textBoxLabels[index]}</Form.Label>\n                 <Form.Control type=\"text\" \n                 value={t}\n                 onChange={(e)=>{\n                     \n                    let tBox = [...textBox];\n                    tBox[index] = e.target.value;\n                    setTextBox(tBox);\n                \n                }} placeholder={ props.textBoxLabels[index] } />\n                </>\n        )\n        })\n        const mappedNumberBox = numberBox.map((n,index)=>{\n            return (\n                 <>\n                 <Form.Label>{props.numberBoxLabels[index]}</Form.Label>\n                 <Form.Control type=\"number\" \n                 value={n}\n                 onChange={(e)=>{\n                     \n                    let noBox = [...numberBox];\n                    noBox[index] = e.target.value;\n                    setNumberBox(noBox);\n                \n                }}  />\n                </>\n        )\n        })\n\n        const mappedAuthorDropdown = authorDropdown.map((d,index)=>{\n          //  console.log(d)\n            return(<>\n            <Form.Label>{props.dropdownLabels[2]} :</Form.Label>\n            <select style={{width:\"100%\"}} onChange={(e)=>{setSelectedAuthor(e.target.value)}} >\n            <option>Select Author</option>\n                {d.map((o)=>{\n                    console.log(o)\n                    return(<option value={o.value} >{o.text}</option>)\n                })}\n            </select>\n            </>)\n        })\n\n        const mappedGenreDropdown = genreDropdown.map((d,index)=>{\n            //  console.log(d)\n              return(<>\n                <Form.Label>{props.dropdownLabels[1]} : </Form.Label>\n              <select style={{width:\"100%\" }} onChange={(e)=>{setSelectedGenre(e.target.value)}}  >\n              <option>Select Genre</option>\n                  {d.map((o)=>{\n                      console.log(o)\n                      return(<option value={o.value} >{o.text}</option>)\n                  })}\n              </select>\n              </>)\n          })\n\n          const mappedLanguageDropdown = langDropdown.map((d,index)=>{\n            //  console.log(d)\n              return(<>\n                <Form.Label>{props.dropdownLabels[0]} : </Form.Label>\n              <select style={{width:\"100%\"}}  onChange={(e)=>{setSelectedLanguage(e.target.value)}}  >\n\n                <option>Select Language</option>\n                  {d.map((o)=>{\n                      console.log(o)\n                      return(<option  value={o.value} >{o.text}</option>)\n                  })}\n              </select>\n              </>)\n          })\n       \n      \n        return (\n          <>\n            \n            <Modal show={show} onHide={handleClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>{props.header}</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n\n\n              {textBox.length>0?\n            \n            <div className=\"textbox-flex\" >\n                {mappedTextBox}\n            </div>\n            \n            :null}\n\n\n                {props.dropdown.length>0?\n                <div>\n                    {mappedAuthorDropdown}\n                    {mappedGenreDropdown}\n                    {mappedLanguageDropdown}\n                </div>\n                :null}\n            {numberBox.length>0?\n            \n            <div className=\"numberbox-flex\" >\n                {mappedNumberBox}\n            </div>\n            \n            :null}\n\n            \n\n\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                  Close\n                </Button>\n                <Button variant=\"primary\" onClick={(e)=>{ addHandler(props.header)  ;handleClose()} }>\n                  {props.buttonText}\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </>\n        );\n      }\n      \n\n\n\nexport default AddModal","/home/reza/codes/ecommerce-site/client/src/contexts/context.js",["64","65","66","67"],"/home/reza/codes/ecommerce-site/client/src/components/AdminLogin/login.js",[],"/home/reza/codes/ecommerce-site/client/src/components/dashboard/authorlist/authorlist.js",["68","69"],"import React ,{useState,useEffect,useContext} from 'react'\nimport {context} from '../../../contexts/context'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt,faEdit } from '@fortawesome/free-solid-svg-icons'\nimport AddModal from '../AddModal/addModal'\nimport {Button} from 'react-bootstrap'\nimport axios from 'axios'\nimport './authorlist.css'\nimport DeleteModal from './deleteModal'\n\nconst AuthorList = ()=>{\n\nconst [willEditPopup,setWillEditPopup] = useState(false)\nconst[willDeletePopup,setWillDeletePopup] = useState(false)\nconst [authors,setAuthors] = useState([])\nconst [selectedAuthor,setSelectedAuthor] = useState(\"\")\nconst {adminLoginToken} = useContext(context)\n\nconsole.log(\"list of authors\",authors)\nuseEffect(()=>{\n\n    async function fetchData (){\n        try{\n\n            const response = await axios.get('/api/author/all',{\n                headers:{\n                    axdxmxixn:adminLoginToken\n                }\n            } )\n\n            setAuthors(response.data.authors)\n        }\n        catch(error){\n            throw error\n        }\n\n    }\n\n    fetchData()\n\n},[])\n\n\nconst editPopupHandler =(authorId)=>{\n    setSelectedAuthor(authorId)\n    setWillEditPopup(!willEditPopup)\n}\n\nconst deletePopupHandler = (authorId)=>{\n    setSelectedAuthor(authorId)\n    setWillDeletePopup(!willDeletePopup)\n    async function fetchData (){\n        try{\n\n            const response = await axios.get('/api/author/all',{\n                headers:{\n                    axdxmxixn:adminLoginToken\n                }\n            } )\n\n            setAuthors(response.data.authors)\n        }\n        catch(error){\n            throw error\n        }\n\n    }\n\n    fetchData()\n    \n}\n\nconst mappedAuthors = authors.map((author)=>{\n    return(\n    <tr key={author._id} >\n    <td >\n\n        {author.name}\n    </td>\n    <td>\n        {author.genre}\n    </td>\n    <td>\n        {author.language}\n    </td>\n    <td>\n        {author.description}\n    </td>\n    <td>\n                <Button variant=\"info\" style={{padding:\"1px\",margin:\"5px\"}} \n                    onClick={()=>{editPopupHandler(author._id)}}\n                >\n                    <FontAwesomeIcon icon={faEdit} />\n                </Button>\n                <Button variant=\"danger\" style={{padding:\"1px\"}} \n                    onClick={ ()=>{deletePopupHandler(author._id) }}\n                >\n                    <FontAwesomeIcon icon={faTrashAlt} />\n                </Button>\n            </td>\n    </tr>\n     )\n})\n\nreturn(\n\n\n    <div style={{marginTop:\"5%\"}}>\n    <h2>List of Authors</h2>\n    <div className=\"author-list\" >\n    \n    {\n        willEditPopup?\n        <AddModal numberBox=\"0\" \n        header=\"Update Author\"\n        type=\"update\"\n        buttonText= \"Update Author\"\n         dropdown={[\"language\",\"genre\"]}\n         textBoxLabels={[\"name\",\"description\"]}\n         dropdownLabels={[\"Select Language\",\"Select Genre\"]}\n         numberBoxLabels={[]}\n        textBox=\"2\"\n         numberBox=\"0\"\n        text=\"Update Author\" \n        bg=\"#568c91\"\n addButtonHandler={editPopupHandler} />\n        :null\n    }\n\n    {\n        willDeletePopup? \n        <DeleteModal authorId={selectedAuthor} deletePopupHandler={deletePopupHandler} />\n        :null\n    }\n    <table className=\"author-table\"   >\n        <tr>\n            <th>\n                Name\n            </th>\n            <th>\n                Genre\n            </th>\n            <th>\n                Language\n            </th>\n            <th>\n                description\n            </th>\n            <th>\n                options\n            </th>\n\n        </tr>\n        {mappedAuthors}\n       \n    </table>\n</div>\n\n</div>)\n}\n\nexport default AuthorList","/home/reza/codes/ecommerce-site/client/src/components/dashboard/authorlist/deleteModal.js",[],"/home/reza/codes/ecommerce-site/client/src/components/AdminLogout/logout.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":7,"column":3,"nodeType":"76","messageId":"77","endLine":7,"endColumn":9},{"ruleId":"74","severity":1,"message":"78","line":9,"column":3,"nodeType":"76","messageId":"77","endLine":9,"endColumn":7},{"ruleId":"74","severity":1,"message":"79","line":1,"column":24,"nodeType":"76","messageId":"77","endLine":1,"endColumn":33},{"ruleId":"74","severity":1,"message":"80","line":2,"column":14,"nodeType":"76","messageId":"77","endLine":2,"endColumn":20},{"ruleId":"74","severity":1,"message":"81","line":11,"column":28,"nodeType":"76","messageId":"77","endLine":11,"endColumn":46},{"ruleId":"74","severity":1,"message":"82","line":9,"column":15,"nodeType":"76","messageId":"77","endLine":9,"endColumn":22},{"ruleId":"74","severity":1,"message":"83","line":10,"column":15,"nodeType":"76","messageId":"77","endLine":10,"endColumn":22},{"ruleId":"74","severity":1,"message":"84","line":16,"column":16,"nodeType":"76","messageId":"77","endLine":16,"endColumn":24},{"ruleId":"74","severity":1,"message":"85","line":16,"column":25,"nodeType":"76","messageId":"77","endLine":16,"endColumn":36},{"ruleId":"74","severity":1,"message":"86","line":18,"column":15,"nodeType":"76","messageId":"77","endLine":18,"endColumn":29},{"ruleId":"87","severity":1,"message":"88","line":107,"column":11,"nodeType":"89","endLine":107,"endColumn":13,"suggestions":"90"},{"ruleId":"74","severity":1,"message":"91","line":12,"column":8,"nodeType":"76","messageId":"77","endLine":12,"endColumn":13},{"ruleId":"74","severity":1,"message":"92","line":13,"column":22,"nodeType":"76","messageId":"77","endLine":13,"endColumn":39},{"ruleId":"74","severity":1,"message":"93","line":15,"column":18,"nodeType":"76","messageId":"77","endLine":15,"endColumn":31},{"ruleId":"74","severity":1,"message":"94","line":25,"column":7,"nodeType":"76","messageId":"77","endLine":25,"endColumn":19},{"ruleId":"87","severity":1,"message":"95","line":41,"column":3,"nodeType":"89","endLine":41,"endColumn":5,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":123,"column":10,"nodeType":"99","endLine":123,"endColumn":23},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'confirmAdminLogout' is assigned a value but never used.","'langRef' is assigned a value but never used.","'authRef' is assigned a value but never used.","'dropdown' is assigned a value but never used.","'setDropDown' is assigned a value but never used.","'selectedAuthor' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'adminLoginToken', 'authorDropdown', 'genreDropdown', 'langDropdown', 'numberBox', 'props.dropdown', 'props.numberBox', 'props.textBox', and 'textBox'. Either include them or remove the dependency array.","ArrayExpression",["102"],"'token' is assigned a value but never used.","'setLoggedInUserId' is assigned a value but never used.","'setLoginToken' is assigned a value but never used.","'registerUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'adminLoginToken'. Either include it or remove the dependency array.",["103"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [adminLoginToken, authorDropdown, genreDropdown, langDropdown, numberBox, props.dropdown, props.numberBox, props.textBox, textBox]",{"range":"108","text":"109"},"Update the dependencies array to be: [adminLoginToken]",{"range":"110","text":"111"},[3774,3776],"[adminLoginToken, authorDropdown, genreDropdown, langDropdown, numberBox, props.dropdown, props.numberBox, props.textBox, textBox]",[1122,1124],"[adminLoginToken]"]